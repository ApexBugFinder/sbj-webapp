image: python:latest
stages:
    - setup-stage
    - test
    - build-stage
    - deploy-feature-stage
    - deploy-stage
    - deploy-server-stage
# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  FF_USE_FASTZIP: "true"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  IMAGE_TAG: obasi79/sbj-webapp
  DOCKER_IMAGE_TAG: obasi79/sbj-webapp:$CI_COMMIT_SHORT_SHA
  # DOCKER_IMAGE_TAG: obasi79/sbj-webapp:$CI_COMMIT_REF_SLUG

  GITLAB_IMAGE_TAG: $CI_REGISTRY_IMAGE/sbj-webapp/app-image:$CI_COMMIT_REF_SLUG


  FEATURE_APP: $IMAGE_TAG:$CI_ENVIRONMENT_SLUG
  PRIVATE_SERVER: "https://198.211.29.93"
  STAGING_APP: sbjwebapp-staging
  PRODUCTION_APP: sbjwebapp-production

  APEXBUGSERVER_STAGING: obasi79/$STAGING_APP:$CI_COMMIT_REF_SLUG
  APEXBUGSERVER_PRODUCTION: obasi79/$PRODUCTION_APP

cache:
  untracked: true
  policy: push
  key: ${CI_COMMIT_SHORT_SHA}
  paths:
    - .cache/pip
    - venv/
    - pytest_reports/









setup:
  stage: setup-stage
  image: python:latest
  tags:
    - sbjwebapp
  before_script:
    - source venv/bin/activate
    - echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - echo $FEATURE_APP
    - pip3 install -r requirements.txt



build:
  stage: build-stage
  image: docker:latest
  tags:
    - sbjwebapp
  services:
      - docker:dind
  before_script:
    # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # - echo $CI_REGISTRY_USER | docker login  -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
  script:
    - echo $DOCKER_IMAGE_TAG
    - docker images
    - ls -al
    - docker build -t $DOCKER_IMAGE_TAG ./flasksbj/

    - docker images
    - docker push $DOCKER_IMAGE_TAG
    - docker images


deploy-feature:
    image: docker:latest
    tags:
      - sbjwebapp
    services:
      - docker:dind
    stage: deploy-feature-stage
    environment:
      name: review/$CI_COMMIT_REF_NAME
      url: https://198.211.29.93
      on_stop: stop_feature
    before_script:
      - export FEATURE_APP2="$CI_ENVIRONMENT_SLUG"
      - echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
    script:
      - echo FEATURE_APP2="$CI_ENVIRONMENT_SLUG" >> deploy_feature.env
      - echo $FEATURE_APP
      - echo $FEATURE_APP2
      - echo FEATURE_APP2
      - docker pull $DOCKER_IMAGE_TAG
      - docker tag $DOCKER_IMAGE_TAG $FEATURE_APP
      - echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
      - docker push $FEATURE_APP
      - docker run --rm -d -it -p 3400:8080 $FEATURE_APP
      - docker ps
      - echo Feature app $FEATURE_APP deployed to  $PRIVATE_SERVER
    artifacts:
      reports:
        dotenv: deploy_feature.env
    only:
       - /^feature-.*$/

stop_feature:
    image: docker:latest
    tags:
      - sbjwebapp
    services:
      - docker:dind
    stage: deploy-feature-stage
    variables:
      GIT_STRATEGY: none
    environment:
      name: review/$CI_COMMIT_REF_NAME
      url: https://198.211.29.93
      action: stop
    before_script:
      - export FEATURE_APP="$CI_ENVIRONMENT_SLUG"
    script:
      - echo $FEATURE_APP
      - echo $FEATURE_APP
      - echo FEATURE_APP
      - docker stop $(docker ps -a -q --filter ancestor=$IMAGE_TAG:$FEATURE_APP)
      - echo $FEATURE APP at server $PRIVATE_SERVER is destroyed
    when: manual

deploy-production:
  stage: deploy-server-stage
  image: docker:dind
  services:
    - docker:dind
  tags:
    - sbjwebapp
  environment:
    name: production
    url: https://198.211.29.93
  before_script:
    # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
  script:
    - docker pull $DOCKER_IMAGE_TAG
    - docker images
    - echo $APEXBUGSERVER_PRODUCTION
    - docker tag $DOCKER_IMAGE_TAG $APEXBUGSERVER_PRODUCTION
    - echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
    - docker push $APEXBUGSERVER_PRODUCTION
    - docker run --rm -d -it -p 8000:8080 $APEXBUGSERVER_PRODUCTION
    - docker ps
    - echo "App deployed to staging server at " $PRIVATE_SERVER
    - ls -al
  only:
    - main


stop-deploy-production:
    stage: deploy-server-stage
    image: docker:latest
    services:
      - docker:dind
    tags:
      - sbjwebapp
    environment:
      name: production
      url: https://198.211.29.93
    script:
      - echo $APEXBUGSERVER_PRODUCTION
      - docker stop $(docker ps -a -q --filter ancestor=$APEXBUGSERVER_PRODUCTION)
      - echo APP on PRODUCTION SERVER $PRIVATE_SERVER stopped with image name $APEXBUGSERVER_PRODUCTION
    only:
      - main
    when: manual